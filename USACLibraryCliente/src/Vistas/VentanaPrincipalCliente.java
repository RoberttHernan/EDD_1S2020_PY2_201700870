/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import PaquetesEnvio.Estudiante;
import PaquetesEnvio.PaqueteUsuario;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.math.BigInteger;
import java.net.Socket;
import java.net.InetAddress;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;

/**
 *
 * @author robea
 */
public class VentanaPrincipalCliente extends javax.swing.JFrame {

    private int CarnetUsuario;
    public static int puerto = 5050;

  

    public static Estudiante estudiante = new Estudiante();
    ConfiguracionPuertoVentana configPuertoVentana = new ConfiguracionPuertoVentana(this, rootPaneCheckingEnabled);
    VentanaSecunciariaCliente ventanaSecundariaCliente = new VentanaSecunciariaCliente(this, rootPaneCheckingEnabled);

    /**
     * Creates new form VentanaPrincipalCliente
     */
    public VentanaPrincipalCliente() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonIngresoCliente = new javax.swing.JButton();
        jTextCarnetIngreso = new javax.swing.JTextField();
        jPasswordIngresoCliente = new javax.swing.JPasswordField();
        jLabelUsuario = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonIngresoCliente.setText("Ingresar");
        jButtonIngresoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngresoClienteActionPerformed(evt);
            }
        });

        jMenu1.setText("Configuracion");

        jMenuItem1.setText("Configurar Puerto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButtonIngresoCliente))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextCarnetIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordIngresoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jTextCarnetIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordIngresoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButtonIngresoCliente)
                .addGap(95, 95, 95))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIngresoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngresoClienteActionPerformed

        try {

            InetAddress address = InetAddress.getLocalHost();
            try (Socket miSocket = new Socket(address, puerto)) {
                String valorPass = new String(jPasswordIngresoCliente.getPassword());
                PaqueteUsuario user = new PaqueteUsuario(Integer.parseInt(jTextCarnetIngreso.getText()), getMd5(valorPass));
                ObjectOutputStream paquete_datos = new ObjectOutputStream(miSocket.getOutputStream());
                //id del tipo de mensaje enviado
                paquete_datos.write(1);
                paquete_datos.writeObject(user);
                paquete_datos.flush();

                ObjectInputStream flujo_entrada = new ObjectInputStream(miSocket.getInputStream());
                Estudiante entrada = (Estudiante) flujo_entrada.readObject();

                if (entrada != null) {
                    // this.CarnetUsuario = entrada.getCarnet();
                    estudiante = entrada;
                    actualizarDatosEditarUsuario();//actualiza la ventana editar usuario

                    JOptionPane.showMessageDialog(rootPane, "Bienvenido!!");

                    ventanaSecundariaCliente.setVisible(true);

                    miSocket.close();

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error de autenticacion de ususario");
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al conectar con el server");
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error de conexion");
        }

    }//GEN-LAST:event_jButtonIngresoClienteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        configPuertoVentana.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosed(WindowEvent e) {
                puerto = configPuertoVentana.getPuerto();
            }
        });

        configPuertoVentana.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipalCliente().setVisible(true);
            }
        });
    }

    private static void actualizarDatosEditarUsuario() {

        EditarUsuario.jTextEditarNombreUsuario.setText(estudiante.getNombre());
        EditarUsuario.jTextEditarApellidoUsuario.setText(estudiante.getApellido());
        EditarUsuario.jTextEditarCarreraUsuario.setText(estudiante.getCarrera());

    }

    private static String getMd5(String input) {
        try {

            // Static getInstance method is called with hashing MD5 
            MessageDigest md = MessageDigest.getInstance("MD5");

            // digest() method is called to calculate message digest 
            //  of an input digest() return array of byte 
            byte[] messageDigest = md.digest(input.getBytes());

            // Convert byte array into signum representation 
            BigInteger no = new BigInteger(1, messageDigest);

            // Convert message digest into hex value 
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        } // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIngresoCliente;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPasswordField jPasswordIngresoCliente;
    private javax.swing.JTextField jTextCarnetIngreso;
    // End of variables declaration//GEN-END:variables

}
